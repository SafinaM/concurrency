cmake_minimum_required(VERSION 3.6)
project(concurrency)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

find_package(Threads)
if(Threads)
	message("Threads found!")
endif()

#set(CMAKE_CXX_FLAGS "-lncurses")
#find_package(Curses REQUIRED)
#include_directories(${CURSES_INCLUDE_DIR})

add_executable(test safe_stack_listing_3_5.cpp)
add_executable(two_threads_ex ex_two_threads.cpp)
add_executable(create_4_threads_ex ex_create_4_threads.cpp)
add_executable(ex_stop_thread ex_stop_thread.cpp)
add_executable(ex_pi ex_pi.cpp)
add_executable(thread_safe_list thread_safe_list.cpp)
add_executable(ex_recursive_coping ex_recursive_coping.cpp)
add_executable(ex_phil_eat ex_phil_eat.cpp)
add_executable(unnames_pipes unnames_pipes.cpp)
add_executable(ex_example_of_condition_variable ex_example_of_condition_variable.cpp)
add_executable(ex_ping_pong ex_ping_pong.cpp)
add_executable(ex_ping_pong_with_conf_variable ex_ping_pong_with_conf_variable.cpp)
add_executable(ex_philosofer_C11_sol1 ex_philosofer_C11_sol1.cpp)
add_executable(ex_phil_C11_sol2 ex_phil_C11_sol2.cpp)
add_executable(shared_data_race_conditions shared_data_race_conditions.cpp)

target_link_libraries(ex_phil_C11_sol2 ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_philosofer_C11_sol1 ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_ping_pong_with_conf_variable ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_example_of_condition_variable ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_ping_pong ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_example_of_condition_variable ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_phil_eat ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_recursive_coping ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(thread_safe_list ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_pi ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(ex_stop_thread ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(create_4_threads_ex ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(two_threads_ex ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(shared_data_race_conditions ${CMAKE_THREAD_LIBS_INIT})

#find_package(GTest REQUIRED)
#include_directories(${GTEST_INCLUDE_DIRS})